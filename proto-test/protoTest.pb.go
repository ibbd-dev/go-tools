// Code generated by protoc-gen-go.
// source: protoTest.proto
// DO NOT EDIT!

/*
Package protoTest is a generated protocol buffer package.

It is generated from these files:
	protoTest.proto

It has these top-level messages:
	TestMsg
*/
package protoTest

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Enum int32

const (
	Enum_C Enum = 12
)

var Enum_name = map[int32]string{
	12: "C",
}
var Enum_value = map[string]int32{
	"C": 12,
}

func (x Enum) Enum() *Enum {
	p := new(Enum)
	*p = x
	return p
}
func (x Enum) String() string {
	return proto.EnumName(Enum_name, int32(x))
}
func (x *Enum) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Enum_value, data, "Enum")
	if err != nil {
		return err
	}
	*x = Enum(value)
	return nil
}
func (Enum) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type TestMsg struct {
	Id   *int32  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Reps []int32 `protobuf:"varint,3,rep,name=reps" json:"reps,omitempty"`
	// Types that are valid to be assigned to Union:
	//	*TestMsg_Names
	//	*TestMsg_Number
	Union            isTestMsg_Union        `protobuf_oneof:"union"`
	Optionalgroup    *TestMsg_OptionalGroup `protobuf:"group,6,opt,name=OptionalGroup" json:"optionalgroup,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *TestMsg) Reset()                    { *m = TestMsg{} }
func (m *TestMsg) String() string            { return proto.CompactTextString(m) }
func (*TestMsg) ProtoMessage()               {}
func (*TestMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isTestMsg_Union interface {
	isTestMsg_Union()
}

type TestMsg_Names struct {
	Names string `protobuf:"bytes,4,opt,name=names,oneof"`
}
type TestMsg_Number struct {
	Number int32 `protobuf:"varint,5,opt,name=number,oneof"`
}

func (*TestMsg_Names) isTestMsg_Union()  {}
func (*TestMsg_Number) isTestMsg_Union() {}

func (m *TestMsg) GetUnion() isTestMsg_Union {
	if m != nil {
		return m.Union
	}
	return nil
}

func (m *TestMsg) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *TestMsg) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *TestMsg) GetReps() []int32 {
	if m != nil {
		return m.Reps
	}
	return nil
}

func (m *TestMsg) GetNames() string {
	if x, ok := m.GetUnion().(*TestMsg_Names); ok {
		return x.Names
	}
	return ""
}

func (m *TestMsg) GetNumber() int32 {
	if x, ok := m.GetUnion().(*TestMsg_Number); ok {
		return x.Number
	}
	return 0
}

func (m *TestMsg) GetOptionalgroup() *TestMsg_OptionalGroup {
	if m != nil {
		return m.Optionalgroup
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*TestMsg) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _TestMsg_OneofMarshaler, _TestMsg_OneofUnmarshaler, _TestMsg_OneofSizer, []interface{}{
		(*TestMsg_Names)(nil),
		(*TestMsg_Number)(nil),
	}
}

func _TestMsg_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*TestMsg)
	// union
	switch x := m.Union.(type) {
	case *TestMsg_Names:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Names)
	case *TestMsg_Number:
		b.EncodeVarint(5<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Number))
	case nil:
	default:
		return fmt.Errorf("TestMsg.Union has unexpected type %T", x)
	}
	return nil
}

func _TestMsg_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*TestMsg)
	switch tag {
	case 4: // union.names
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Union = &TestMsg_Names{x}
		return true, err
	case 5: // union.number
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Union = &TestMsg_Number{int32(x)}
		return true, err
	default:
		return false, nil
	}
}

func _TestMsg_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*TestMsg)
	// union
	switch x := m.Union.(type) {
	case *TestMsg_Names:
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Names)))
		n += len(x.Names)
	case *TestMsg_Number:
		n += proto.SizeVarint(5<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Number))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type TestMsg_OptionalGroup struct {
	GroupId          *string `protobuf:"bytes,5,req,name=groupId" json:"groupId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *TestMsg_OptionalGroup) Reset()                    { *m = TestMsg_OptionalGroup{} }
func (m *TestMsg_OptionalGroup) String() string            { return proto.CompactTextString(m) }
func (*TestMsg_OptionalGroup) ProtoMessage()               {}
func (*TestMsg_OptionalGroup) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *TestMsg_OptionalGroup) GetGroupId() string {
	if m != nil && m.GroupId != nil {
		return *m.GroupId
	}
	return ""
}

func init() {
	proto.RegisterType((*TestMsg)(nil), "protoTest.TestMsg")
	proto.RegisterType((*TestMsg_OptionalGroup)(nil), "protoTest.TestMsg.OptionalGroup")
	proto.RegisterEnum("protoTest.Enum", Enum_name, Enum_value)
}

func init() { proto.RegisterFile("protoTest.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 193 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0x28, 0xca, 0x2f,
	0xc9, 0x0f, 0x49, 0x2d, 0x2e, 0xd1, 0x03, 0xb3, 0x84, 0x38, 0xe1, 0x02, 0x4a, 0x3b, 0x18, 0xb9,
	0xd8, 0x41, 0x0c, 0xdf, 0xe2, 0x74, 0x21, 0x2e, 0x2e, 0xa6, 0xcc, 0x14, 0x09, 0x46, 0x05, 0x26,
	0x0d, 0x56, 0x21, 0x1e, 0x2e, 0x96, 0xbc, 0xc4, 0xdc, 0x54, 0x09, 0x26, 0x05, 0x46, 0x0d, 0x4e,
	0x10, 0xaf, 0x28, 0xb5, 0xa0, 0x58, 0x82, 0x59, 0x81, 0x19, 0x28, 0xc7, 0xcf, 0xc5, 0x0a, 0x92,
	0x2b, 0x96, 0x60, 0x01, 0x49, 0x7a, 0x30, 0x08, 0x09, 0x70, 0xb1, 0xe5, 0x95, 0xe6, 0x26, 0xa5,
	0x16, 0x49, 0xb0, 0x02, 0x45, 0x58, 0x81, 0x22, 0xe6, 0x5c, 0xbc, 0xf9, 0x05, 0x25, 0x99, 0xf9,
	0x79, 0x89, 0x39, 0xe9, 0x45, 0xf9, 0xa5, 0x05, 0x12, 0x6c, 0x40, 0x09, 0x2e, 0x23, 0x05, 0x3d,
	0x84, 0x53, 0xa0, 0xb6, 0xea, 0xf9, 0x43, 0xd5, 0xb9, 0x83, 0xd4, 0x49, 0x29, 0x70, 0xf1, 0xa2,
	0x08, 0x00, 0x2d, 0x63, 0x07, 0x9b, 0xe0, 0x99, 0x02, 0x34, 0x9c, 0x49, 0x83, 0xd3, 0x89, 0x9d,
	0x8b, 0xb5, 0x34, 0x0f, 0xa8, 0x40, 0x8b, 0x97, 0x8b, 0xc5, 0x15, 0x68, 0xad, 0x10, 0x2b, 0x17,
	0xa3, 0xb3, 0x00, 0x0f, 0x20, 0x00, 0x00, 0xff, 0xff, 0x8b, 0xd5, 0x3b, 0x43, 0xe6, 0x00, 0x00,
	0x00,
}
